{"version":3,"file":"static/js/547.7d2f97af.chunk.js","mappings":"mNA6DA,EAhDgB,SAACA,GACb,IAI8BC,EAJtBC,EAA4EF,EAA5EE,QAASC,EAAmEH,EAAnEG,YAAkCC,GAAiCJ,EAAtDK,UAAsDL,EAA/BM,WAAAA,OAAS,IAAAF,GAAQA,EAAEG,EAAYP,EAAZO,QAChEC,GAAMC,EAAAA,EAAAA,MAAND,EAmBR,OAAOE,EAAAA,cACHC,EAAAA,EAAAA,KAAA,WAASC,UAAU,QAAOC,UACtBC,EAAAA,EAAAA,MAAA,OAAKF,UAAU,UAASC,SAAA,EACpBF,EAAAA,EAAAA,KAAA,KAAGC,UAAU,2BAA0BC,SAAEL,EAAE,2BAC3CG,EAAAA,EAAAA,KAAA,UACAA,EAAAA,EAAAA,KAAA,OAAKC,UAAU,yBAAwBC,UArBrBZ,EAqB4CC,EAnBlED,EAAIc,SAAS,UAAYd,EAAIc,SAAS,eAC/BP,EAAE,uCAETP,EAAIc,SAAS,aAAed,EAAIc,SAAS,cAClCP,EAAE,0CAETP,EAAIc,SAAS,QAAUd,EAAIc,SAAS,OAC7BP,EAAE,oCAINP,GAAOO,EAAE,8BAURM,EAAAA,EAAAA,MAAA,OAAKF,UAAU,mBAAkBC,SAAA,CAC5BP,GAAaC,IACVI,EAAAA,EAAAA,KAACK,EAAAA,GAAW,CAACJ,UAAU,wCAAwCK,QAASV,EAAQM,SAC3EL,EAAE,mBAIVL,IACGW,EAAAA,EAAAA,MAACE,EAAAA,GAAW,CAACJ,UAAU,sCAAsCK,QAASd,EAAYU,SAAA,EAC9EF,EAAAA,EAAAA,KAACO,EAAAA,EAAMC,MAAK,KACZR,EAAAA,EAAAA,KAAA,QAAMC,UAAU,UAASC,SAAEL,EAAE,gCAMjDY,SAASC,KAEjB,C","sources":["pages/NoPage/NoPage.tsx"],"sourcesContent":["import ReactDOM from \"react-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport Icons from \"icons\";\r\nimport { BasicButton } from \"components\";\r\n\r\ninterface Props {\r\n    message: string;\r\n    handleClear?: () => void;\r\n    errorType?: \"general\" | \"network\" | \"video\" | \"page\" | \"auth\" | \"search\" | \"api\";\r\n    showRetry?: boolean;\r\n    onRetry?: () => void;\r\n}\r\n\r\nconst Message = (props: Props): JSX.Element => {\r\n    const { message, handleClear, errorType = \"general\", showRetry = false, onRetry } = props;\r\n    const { t } = useTranslation();\r\n\r\n    // Try to match the message to a translation key, otherwise use the raw message\r\n    const getTranslatedMessage = (msg: string) => {\r\n        // Check if message matches known patterns\r\n        if (msg.includes(\"video\") && msg.includes(\"unavailable\")) {\r\n            return t(\"errors.video.unavailableDescription\");\r\n        }\r\n        if (msg.includes(\"internet\") || msg.includes(\"connection\")) {\r\n            return t(\"errors.network.noConnectionDescription\");\r\n        }\r\n        if (msg.includes(\"API\") || msg.includes(\"key\")) {\r\n            return t(\"errors.api.keyMissingDescription\");\r\n        }\r\n\r\n        // Return the message as-is if no translation found, or \"unknown error\" if empty\r\n        return msg || t(\"errors.general.unknown\");\r\n    };\r\n\r\n    return ReactDOM.createPortal(\r\n        <article className=\"error\">\r\n            <div className=\"message\">\r\n                <p className=\"message__general-message\">{t(\"errors.general.title\")}</p>\r\n                <hr />\r\n                <div className=\"message__error-message\">{getTranslatedMessage(message)}</div>\r\n\r\n                <div className=\"message__actions\">\r\n                    {showRetry && onRetry && (\r\n                        <BasicButton className=\"message__retry-button button--primary\" onClick={onRetry}>\r\n                            {t(\"actions.retry\")}\r\n                        </BasicButton>\r\n                    )}\r\n\r\n                    {handleClear && (\r\n                        <BasicButton className=\"message__hide-message button--alarm\" onClick={handleClear}>\r\n                            <Icons.Clear />\r\n                            <span className=\"sr-only\">{t(\"actions.dismiss\")}</span>\r\n                        </BasicButton>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </article>,\r\n        document.body\r\n    );\r\n};\r\n\r\nexport default Message;\r\n"],"names":["props","msg","message","handleClear","_props$showRetry","errorType","showRetry","onRetry","t","useTranslation","ReactDOM","_jsx","className","children","_jsxs","includes","BasicButton","onClick","Icons","Clear","document","body"],"sourceRoot":""}